fragment CheckoutProduct on ProductVariant {
  product {
    id
    name
    slug
  }
}

query GetCheckoutInfo($checkoutToken: UUID!) {
  checkout(token: $checkoutToken) {
    lines {
      id
      quantity
      variant {
        ...GenericProductVariant
        ...CheckoutProduct
      }
    }

    subtotalPrice {
      gross {
        amount
        currency
      }
    }

    shippingPrice {
      gross {
        amount
        currency
      }
    }

    totalPrice {
      gross {
        amount
        currency
      }
    }

    shippingAddress {
      ...GenericAddress
    }

    billingAddress {
      ...GenericAddress
    }

    shippingMethods {
      id
      name
      description
      active
      minimumOrderPrice {
        amount
        currency
      }
      maximumOrderPrice {
        amount
        currency
      }
      price {
        amount
        currency
      }
      maximumDeliveryDays
      minimumDeliveryDays
    }
  }
}

mutation CreateCheckout($channel: String!, $email: String!) {
  checkoutCreate(input: { channel: $channel, email: $email, lines: [] }) {
    checkout {
      token
    }
    errors {
      field
      code
    }
  }
}

mutation AddProductToCart($checkoutToken: UUID!, $variantId: ID!) {
  checkoutLinesAdd(
    token: $checkoutToken
    lines: [{ quantity: 1, variantId: $variantId }]
  ) {
    checkout {
      id
    }
    errors {
      message
    }
  }
}

mutation UpdateProductInCart(
  $checkoutToken: UUID!
  $lines: [CheckoutLineUpdateInput!]!
) {
  checkoutLinesUpdate(token: $checkoutToken, lines: $lines) {
    checkout {
      id
    }
    errors {
      message
    }
  }
}

mutation RemoveProductFromCart($checkoutToken: UUID!, $linesIds: [ID!]!) {
  checkoutLinesDelete(token: $checkoutToken, linesIds: $linesIds) {
    checkout {
      id
    }
    errors {
      message
    }
  }
}
